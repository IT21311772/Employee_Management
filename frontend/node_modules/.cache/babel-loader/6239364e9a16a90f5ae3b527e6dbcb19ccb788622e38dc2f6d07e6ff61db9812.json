{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Employee_management-MERN-Stack\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport Employees from './Components/DisplayData';\nimport AddData from './Components/AddData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check if the user is logged in on component mount\n  useEffect(() => {\n    // Your logic to determine if the user is logged in (e.g., check authentication token)\n    const storedToken = localStorage.getItem('authToken');\n    const userIsLoggedIn = !!storedToken; // Check if the token exists\n    setIsLoggedIn(userIsLoggedIn);\n  }, []);\n  const PrivateRoute = _ref => {\n    let {\n      element,\n      path\n    } = _ref;\n    return isLoggedIn ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: () => setIsLoggedIn(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/employees\",\n        element: /*#__PURE__*/_jsxDEV(Employees, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/add\",\n        element: /*#__PURE__*/_jsxDEV(AddData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/add/employees\",\n        element: /*#__PURE__*/_jsxDEV(Employees, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Route","Routes","Navigate","Login","SignUp","Employees","AddData","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","storedToken","localStorage","getItem","userIsLoggedIn","PrivateRoute","_ref","element","path","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onLogin","_c","$RefreshReg$"],"sources":["D:/Desktop/Employee_management-MERN-Stack/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './Components/Login';\r\nimport SignUp from './Components/SignUp';\r\nimport Employees from './Components/DisplayData';\r\nimport AddData from './Components/AddData';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // Check if the user is logged in on component mount\r\n  useEffect(() => {\r\n    // Your logic to determine if the user is logged in (e.g., check authentication token)\r\n    const storedToken = localStorage.getItem('authToken');\r\n    const userIsLoggedIn = !!storedToken; // Check if the token exists\r\n    setIsLoggedIn(userIsLoggedIn);\r\n  }, []);\r\n\r\n  const PrivateRoute = ({ element, path }) => {\r\n    return isLoggedIn ? element : <Navigate to=\"/login\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n        <Route path=\"/login\" element={<Login onLogin={() => setIsLoggedIn(true)} />} />\r\n        <Route path=\"/signup\" element={<SignUp />} />\r\n        <PrivateRoute path=\"/employees\" element={<Employees />} />\r\n        <PrivateRoute path=\"/add\" element={<AddData />} />\r\n        <PrivateRoute path=\"/add/employees\" element={<Employees />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}